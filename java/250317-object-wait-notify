# 1. Object - wait, notify
- 자바는 처음부터 멀티스레드를 고려하며 탄생한 언어다.
- synchronized를 사용한 임계 영역 안에서 락을 가지고 무한 대기하는 문제는 Object 클래스의  wait(), notify() 로 해결 가능하다.

## 1-1. wait(), notify() 설명
- Object.wait()
   - 현재 스레드가 가진 락을 반납하고 대기(WAITING)한다.
   - 현재 스레드를 대기(WAITING) 상태로 전환한다. 
   - 이 메서드는 현재 스레드가 synchronized 블록이나 메서드에서 락을 소유하고 있을 때만 호출할 수 있다.
   - 호출한 스레드는 락을 반납하고, 다른 스레드가 해당 락을 획득할 수 있도록 한다.
   - 이렇게 대기 상태로 전환된 스레드는 다른 스레드가 notify() 또는 notifyAll()을 호출할 때까지 대기 상태를 유지한다.
- Object.notify()
  - 대기 중인 스레드 중 하나를 깨운다.
  - 이 메서드는 synchronized 블록이나 메서드에서 호출되어야 한다.
  - 깨운 스레드는 락을 다시 획득할 기회를 얻게 된다.
  - 만약 대기 중인 스레드가 여러 개라면, 그 중 하나만이 깨워지게 된다.
- Object.notifyAll()
  - 대기 중인 모든 스레드를 깨운다.
  - 이 메서드 역시 synchronized 블록이나 메서드에서 호출되어야 한다.
  - 모든 대기 중인 스레드가 락을 획득할 수 있는 기회를 얻게 된다.

## 1-2. 예제
### 1-2-1. 버퍼 구현체
